# Docker Compose for server deployment
# Usage: docker-compose -f docker-compose.server.yml up -d

version: '3.8'

services:
  omniflows-development:
    image: ghcr.io/taipan-pr/omniflows-frontend:development
    container_name: omniflows-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_APP_ENV=development
      - NEXT_PUBLIC_API_BASE_URL=https://api-dev.omniflows.com
      - NEXT_PUBLIC_APP_VERSION=development
      - NEXT_TELEMETRY_DISABLED=1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.omniflows-dev.rule=Host(`dev.omniflows.com`)"
      - "traefik.http.services.omniflows-dev.loadbalancer.server.port=3000"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  default:
    name: omniflows-network
    external: true