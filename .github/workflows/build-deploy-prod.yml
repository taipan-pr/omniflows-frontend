name: Build and Deploy to Production

on:
  push:
    branches: [ main ]

permissions:
  packages: write
  contents: read

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  EC2_USERNAME: ubuntu
  EC2_DIRECTORY: ~/docker/omniflows-prod

jobs:
  build-and-test:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run type checking
        run: npm run typecheck

      - name: Run linter
        run: npm run lint

  build-image:
    runs-on: self-hosted
    needs: build-and-test
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/arm64
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          file: ./Dockerfile.production

      - name: Deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: awsdocker.taipan.dev
          username: ${{ env.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          command_timeout: 30m
          script: |
            export CR_PAT=${{ secrets.GITHUB_TOKEN }}
            echo $CR_PAT | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            cd ${{ env.EC2_DIRECTORY }}
            docker compose pull && docker compose down && docker compose up -d     
            docker container prune -f && docker image prune -f
